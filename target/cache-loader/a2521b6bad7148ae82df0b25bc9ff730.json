{"remainingRequest":"/home/cadu/viajato/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/cadu/viajato/node_modules/ts-loader/index.js??ref--9-3!/home/cadu/viajato/node_modules/angular-router-loader/src/index.js!/home/cadu/viajato/node_modules/tslint-loader/index.js!/home/cadu/viajato/src/main/webapp/app/entities/cidade/cidade-update.component.ts","dependencies":[{"path":"/home/cadu/viajato/src/main/webapp/app/entities/cidade/cidade-update.component.ts","mtime":1536760247778},{"path":"/home/cadu/viajato/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/cadu/viajato/node_modules/cache-loader/dist/cjs.js","mtime":1536605089449},{"path":"/home/cadu/viajato/node_modules/thread-loader/dist/cjs.js","mtime":1536605089181},{"path":"/home/cadu/viajato/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/cadu/viajato/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/cadu/viajato/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar cidade_service_1 = require(\"./cidade.service\");\nvar estado_1 = require(\"app/entities/estado\");\nvar CidadeUpdateComponent = /** @class */ (function () {\n    function CidadeUpdateComponent(jhiAlertService, cidadeService, estadoService, activatedRoute) {\n        this.jhiAlertService = jhiAlertService;\n        this.cidadeService = cidadeService;\n        this.estadoService = estadoService;\n        this.activatedRoute = activatedRoute;\n    }\n    CidadeUpdateComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(function (_a) {\n            var cidade = _a.cidade;\n            _this.cidade = cidade;\n        });\n        this.estadoService.query().subscribe(function (res) {\n            _this.estados = res.body;\n        }, function (res) { return _this.onError(res.message); });\n    };\n    CidadeUpdateComponent.prototype.previousState = function () {\n        window.history.back();\n    };\n    CidadeUpdateComponent.prototype.save = function () {\n        this.isSaving = true;\n        if (this.cidade.id !== undefined) {\n            this.subscribeToSaveResponse(this.cidadeService.update(this.cidade));\n        }\n        else {\n            this.subscribeToSaveResponse(this.cidadeService.create(this.cidade));\n        }\n    };\n    CidadeUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\n        var _this = this;\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\n    };\n    CidadeUpdateComponent.prototype.onSaveSuccess = function () {\n        this.isSaving = false;\n        this.previousState();\n    };\n    CidadeUpdateComponent.prototype.onSaveError = function () {\n        this.isSaving = false;\n    };\n    CidadeUpdateComponent.prototype.onError = function (errorMessage) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    };\n    CidadeUpdateComponent.prototype.trackEstadoById = function (index, item) {\n        return item.id;\n    };\n    Object.defineProperty(CidadeUpdateComponent.prototype, \"cidade\", {\n        get: function () {\n            return this._cidade;\n        },\n        set: function (cidade) {\n            this._cidade = cidade;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CidadeUpdateComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-cidade-update',\n            templateUrl: './cidade-update.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" && _a || Object, typeof (_b = typeof cidade_service_1.CidadeService !== \"undefined\" && cidade_service_1.CidadeService) === \"function\" && _b || Object, typeof (_c = typeof estado_1.EstadoService !== \"undefined\" && estado_1.EstadoService) === \"function\" && _c || Object, typeof (_d = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" && _d || Object])\n    ], CidadeUpdateComponent);\n    return CidadeUpdateComponent;\n    var _a, _b, _c, _d;\n}());\nexports.CidadeUpdateComponent = CidadeUpdateComponent;\n",{"version":3,"file":"/home/cadu/viajato/src/main/webapp/app/entities/cidade/cidade-update.component.ts","sourceRoot":"","sources":["/home/cadu/viajato/node_modules/angular-router-loader/src/index.js!/home/cadu/viajato/node_modules/tslint-loader/index.js!/home/cadu/viajato/src/main/webapp/app/entities/cidade/cidade-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { JhiAlertService } from 'ng-jhipster';\n\nimport { ICidade } from 'app/shared/model/cidade.model';\nimport { CidadeService } from './cidade.service';\nimport { IEstado } from 'app/shared/model/estado.model';\nimport { EstadoService } from 'app/entities/estado';\n\n@Component({\n    selector: 'jhi-cidade-update',\n    templateUrl: './cidade-update.component.html'\n})\nexport class CidadeUpdateComponent implements OnInit {\n    private _cidade: ICidade;\n    isSaving: boolean;\n\n    estados: IEstado[];\n\n    constructor(\n        private jhiAlertService: JhiAlertService,\n        private cidadeService: CidadeService,\n        private estadoService: EstadoService,\n        private activatedRoute: ActivatedRoute\n    ) {}\n\n    ngOnInit() {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({ cidade }) => {\n            this.cidade = cidade;\n        });\n        this.estadoService.query().subscribe(\n            (res: HttpResponse<IEstado[]>) => {\n                this.estados = res.body;\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.isSaving = true;\n        if (this.cidade.id !== undefined) {\n            this.subscribeToSaveResponse(this.cidadeService.update(this.cidade));\n        } else {\n            this.subscribeToSaveResponse(this.cidadeService.create(this.cidade));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<ICidade>>) {\n        result.subscribe((res: HttpResponse<ICidade>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    private onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n    }\n\n    private onError(errorMessage: string) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    }\n\n    trackEstadoById(index: number, item: IEstado) {\n        return item.id;\n    }\n    get cidade() {\n        return this._cidade;\n    }\n\n    set cidade(cidade: ICidade) {\n        this._cidade = cidade;\n    }\n}\n"]}]}